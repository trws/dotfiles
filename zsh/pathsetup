#!zsh

typeset -U path
typeset -U manpath
declare -a pkg_config_path
typeset -U pkg_config_path
typeset -T PKG_CONFIG_PATH pkg_config_path

function remove_from_path(){
  for p in $@ ; do
    path=("${(@)path:#$p}")
  done
}

function add_to_path_front(){
  for p in $@ ; do
    if [[ ! -d $p ]] ; then
      continue
    fi
    if [ -d $p/bin ] ; then
      path=($p/bin $path)
    fi
    if [ -d $p/man ] ; then
      manpath=($p/man $manpath)
    fi
    if [ -d $p/share/man ] ; then
      manpath=($p/share/man $manpath)
    fi
    for pp in share lib lib64 ; do
      if [ -d $p/$pp/pkgconfig ] ; then
        pkg_config_path=($p/$pp/pkgconfig $pkg_config_path)
      fi
    done
  done
}

function add_to_path_back(){
  for p in $@ ; do
    if [[ ! -d $p ]] ; then
      continue
    fi
    if [ -d $p/bin ] ; then
      path=($path $p/bin)
    fi
    if [ -d $p/man ] ; then
      manpath=($manpath $p/man)
    fi
    if [ -d $p/share/man ] ; then
      manpath=($manpath $p/share/man)
    fi
    if [ -d $p/share/pkgconfig ] ; then
      pkg_config_path=($pkg_config_path $p/share/pkgconfig )
    fi
    if [ -d $p/lib/pkgconfig ] ; then
      pkg_config_path=($pkg_config_path $p/lib/pkgconfig )
    fi
    if [ -d $p/lib64/pkgconfig ] ; then
      pkg_config_path=($pkg_config_path $p/lib64/pkgconfig )
    fi
  done
}

# strip wsl paths in case we forget to configure it
if [[ -n "$WSLENV" ]] ; then
  typeset -a winpaths
  typeset -a newpaths
  for p in $path ; do
    if [[ p =~ "/mnt/c" ]] ; then
      winpaths+=$p
    else
      newpaths+=$p
    fi
  done
  path=($newpaths)
fi

[[ -x /usr/local/bin/defaultpaths ]] && eval `/usr/local/bin/defaultpaths`

add_to_path_back /usr/local /usr ""

if (( $gotroot )) ; then
  path=(/usr/local/sbin /opt/local/sbin $path)
  path=($path /sbin /usr/sbin)
fi

if is-darwin ; then
  add_to_path_front /Developer/usr /opt/local
fi

if is-linux ; then
  # for brew on linux
  add_to_path_front /home/linuxbrew/.linuxbrew
fi


# for pipx
add_to_path_front ~/.local

add_to_path_back /usr/local/cuda  /usr/local/opt/go/libexec

add_to_path_front ~/spack


for p in $zimpaths; do
  add_to_path_front $p
done

function load_vim() {
  if [[ -d /usr/tce/packages/vim/ ]] ; then
    local vimdirs
    vimdirs=(/usr/tce/packages/vim/*)
    if [[ $#vimdirs -gt 0 ]] ; then
      local highest_version=${vimdirs[-1]}
      add_to_path_front "$highest_version"
    fi
  elif [[ -d /Applications/VimR.app ]] ; then
    # add_to_path_front /Applications/VimR.app/Contents/MacOS/VimR
  fi
}
load_vim


add_to_path_back ~/.cache/doom-emacs

if [[ -n "$SYS_TYPE" ]] ; then
  export PRGPATH=~/programs/${SYS_TYPE}
else
  export PRGPATH=~/programs/default
fi
add_to_path_front  "$PRGPATH"

mkdirp_if_missing $PRGPATH/go/bin
export GOPATH="$PRGPATH/go"
add_to_path_front "$PRGPATH/go"

mkdirp_if_missing $PRGPATH/cargo/bin
mkdirp_if_missing $PRGPATH/rustup
export CARGO_HOME="$PRGPATH/cargo"
# export RUSTUP_HOME="$PRGPATH/rustup"
add_to_path_front "$PRGPATH/cargo"

add_to_path_front "$PRGPATH/spack"

remove_from_path ~/scripts
path=(~/scripts $path)

# not named bin, must be manual, should be last to shortcut with direnv when
# possible
path=($path ~/.cache/asdf/shims)

export PKG_CONFIG_PATH
export pkg_config_path

