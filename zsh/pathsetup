#!zsh

typeset -U path
typeset -U manpath
declare -a pkg_config_path
typeset -U pkg_config_path
typeset -T PKG_CONFIG_PATH pkg_config_path

function remove_from_path(){
  for p in $@ ; do
    path=("${(@)path:#$p}")
  done
}

function add_to_path_front(){
  for p in $@ ; do
    if [[ ! -d $p ]] ; then
      continue
    fi
    if [ -d $p/bin ] ; then
      path=($p/bin $path)
    fi
    if [ -d $p/man ] ; then
      manpath=($p/man $manpath)
    fi
    if [ -d $p/share/man ] ; then
      manpath=($p/share/man $manpath)
    fi
    if [ -d $p/share/pkgconfig ] ; then
      pkg_config_path=($p/share/pkgconfig $pkg_config_path)
    fi
    if [ -d $p/lib/pkgconfig ] ; then
      pkg_config_path=($p/lib/pkgconfig $pkg_config_path)
    fi
    if [ -d $p/lib64/pkgconfig ] ; then
      pkg_config_path=($p/lib64/pkgconfig $pkg_config_path)
    fi
  done
}

function add_to_path_back(){
  for p in $@ ; do
    if [[ ! -d $p ]] ; then
      continue
    fi
    if [ -d $p/bin ] ; then
      path=($path $p/bin)
    fi
    if [ -d $p/man ] ; then
      manpath=($manpath $p/man)
    fi
    if [ -d $p/share/man ] ; then
      manpath=($manpath $p/share/man)
    fi
    if [ -d $p/share/pkgconfig ] ; then
      pkg_config_path=($pkg_config_path $p/share/pkgconfig )
    fi
    if [ -d $p/lib/pkgconfig ] ; then
      pkg_config_path=($pkg_config_path $p/lib/pkgconfig )
    fi
    if [ -d $p/lib64/pkgconfig ] ; then
      pkg_config_path=($pkg_config_path $p/lib64/pkgconfig )
    fi
  done
}

[[ -x /usr/local/bin/defaultpaths ]] && eval `/usr/local/bin/defaultpaths`

add_to_path_back /usr ""

if (( $gotroot )) ; then
  path=(/usr/local/sbin /opt/local/sbin $path)
  path=($path /sbin /usr/sbin)
fi

# path=(/usr/local/opt/coreutils/libexec/gnubin /opt/local/libexec/gnubin $path)
[[ -d /opt/local/libexec/gnubin ]] && path=(/opt/local/libexec/gnubin $path)

if is-darwin ; then
  add_to_path_front /Developer/usr /opt/local
fi

if is-linux ; then
  # for brew on linux
  add_to_path_front /home/linuxbrew/.linuxbrew
fi


# for pipx
add_to_path_front ~/.local

manpath=( ~/programs/man ~/programs/share/man /opt/local/man /usr/share/man $manpath )

if [[ $system == solaris ]] ; then
  add_to_path_front /p/zsh /p/openssh/ /p/cvs/ $JAVACC $CS352 $J2SE15 /usr/xpg4 /usr/ccs
  add_to_path_back /usr/ucb
fi

add_to_path_back /usr/local/cuda  /usr/local/opt/go/libexec

add_to_path_front /usr/local ~/spack

function load_vim() {
  if [[ -d /usr/tce/packages/vim/ ]] ; then
    local vimdirs
    vimdirs=(/usr/tce/packages/vim/*)
    if [[ $#vimdirs -gt 0 ]] ; then
      local highest_version=${vimdirs[-1]}
      add_to_path_front "$highest_version"
    fi
  fi
}
load_vim


add_to_path_back ~/.dotfiles/doom-emacs

if [[ -n "$SYS_TYPE" ]] ; then
  export PRGPATH=~/programs/${SYS_TYPE}
else
  export PRGPATH=~/programs/default
fi
add_to_path_front  "$PRGPATH"

mkdirp_if_missing $PRGPATH/go/bin
export GOPATH="$PRGPATH/go"
add_to_path_front "$PRGPATH/go"

mkdirp_if_missing $PRGPATH/cargo/bin
mkdirp_if_missing $PRGPATH/rustup
export CARGO_HOME="$PRGPATH/cargo"
export RUSTUP_HOME="$PRGPATH/rustup"
add_to_path_front "$PRGPATH/cargo"

remove_from_path ~/scripts
path=(~/scripts $path)

export PKG_CONFIG_PATH
export pkg_config_path

